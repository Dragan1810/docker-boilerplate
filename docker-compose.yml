version: "3.5"
services:
  node-prod:
    build:
      context: backend/services/gateway
    ports:
      - "5000:5000"
    environment:
      - PRODUCTION=true
      - REDIS_URL=redis://cache
    depends_on:
      - postgres
    networks:
      - api-gateway

  redis:
    image: redis
    container_name: cache
    expose:
      - "6379"
    networks:
      - api-gateway

  users:
    build:
      context: backend/services/users
    expose:
      - "3000"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@users-db:5432/users
      - PRODUCTION=true
    depends_on:
      - users-db
    networks:
      - users-net
      - api-gateway

  users-db:
    build:
      context: backend/services/users/db
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=users
    networks:
      - users-net

  # POSTS
  posts:
    build:
      context: backend/services/posts
    expose:
      - "3002"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@posts-db:5432/posts
      - PRODUCTION=true
    depends_on:
      - posts-db
    networks:
      - posts-net
      - api-gateway

  posts-db:
    build:
      context: backend/services/posts/db
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=posts
    networks:
      - posts-net

  # front-end built with react
  react-prod:
    restart: always
    build:
      context: frontend
      target: prod
    ports:
      - "3333:3000"
    depends_on:
      - node-prod
    networks:
      - api-gateway

  # nginx is used for ssl termination
  nginx-prod:
    restart: always
    build:
      context: nginx
      target: dev
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - node-prod
      - react-prod
    networks:
      - api-gateway

  postgres:
    restart: always
    build: postgres
    expose:
      - "5432"
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_USER: docker
      POSTGRES_DB: docker
    networks:
      - api-gateway

# NETWORKS

networks:
  api-gateway:
  users-net:
  posts-net:
# NLP BS CALCULATOR !
